{"ast":null,"code":"var _jsxFileName = \"E:\\\\doctoraps\\\\frontend\\\\src\\\\pages\\\\Doctors.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction errText(err) {\n  try {\n    if (!(err !== null && err !== void 0 && err.message)) return \"Network error\";\n    return err.message;\n  } catch {\n    return \"Request failed.\";\n  }\n}\nexport default function DoctorsPage({\n  username,\n  role\n}) {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\n  const [doctorsError, setDoctorsError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [usersError, setUsersError] = useState(null);\n  const [q, setQ] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [formData, setFormData] = useState({\n    specialization: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    bmdc_no: \"\"\n  });\n  const [submitError, setSubmitError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const token = localStorage.getItem(\"access\");\n  const authHeader = token ? {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  } : {\n    \"Content-Type\": \"application/json\"\n  };\n\n  // Fetch all doctors (works for public and admin)\n  const fetchDoctors = async () => {\n    try {\n      setLoadingDoctors(true);\n      setDoctorsError(null);\n      const res = await fetch(\"http://localhost:8000/api/doctors/\", {\n        headers: authHeader\n      });\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => null);\n        throw new Error((errorData === null || errorData === void 0 ? void 0 : errorData.detail) || `Failed to fetch doctors: ${res.status}`);\n      }\n      const data = await res.json();\n      setDoctors(data);\n    } catch (err) {\n      setDoctorsError(errText(err));\n    } finally {\n      setLoadingDoctors(false);\n    }\n  };\n  useEffect(() => {\n    fetchDoctors();\n  }, [token]);\n  const doctorUserIds = useMemo(() => doctors.map(doc => doc.user), [doctors]);\n\n  // Fetch all users (admin only)\n  useEffect(() => {\n    if (role !== \"admin\" || !token) return;\n    let cancelled = false;\n    const loadUsers = async (url = \"http://localhost:8000/api/users/\") => {\n      setLoadingUsers(true);\n      try {\n        const all = [];\n        while (url) {\n          const res = await fetch(url, {\n            headers: authHeader\n          });\n          if (!res.ok) throw new Error(\"Failed to fetch users\");\n          const data = await res.json();\n          all.push(...(Array.isArray(data) ? data : data.results || []));\n          url = (data === null || data === void 0 ? void 0 : data.next) || null;\n        }\n        if (!cancelled) setUsers(all);\n      } catch (err) {\n        if (!cancelled) setUsersError(errText(err));\n      } finally {\n        if (!cancelled) setLoadingUsers(false);\n      }\n    };\n    loadUsers();\n    return () => cancelled = true;\n  }, [role, token]);\n  const filteredUsers = useMemo(() => {\n    if (!q) return users;\n    const search = q.toLowerCase();\n    return users.filter(u => u.username && u.username.toLowerCase().includes(search) || u.email && u.email.toLowerCase().includes(search) || String(u.id).includes(search));\n  }, [q, users]);\n\n  // Admin sees all, others see only verified\n  const displayedDoctors = useMemo(() => {\n    if (role === \"admin\" || role === \"management\") return doctors;\n    return doctors.filter(d => d.is_verified);\n  }, [doctors, role]);\n\n  // Add doctor (admin only)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError(null);\n    setSuccess(null);\n    if (!userId || !formData.specialization.trim() || !formData.bmdc_no.trim()) {\n      setSubmitError(\"User ID, Specialization এবং BMDC Number প্রয়োজন।\");\n      return;\n    }\n    if (doctorUserIds.includes(Number(userId))) {\n      setSubmitError(\"This user is already registered as a doctor.\");\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const payload = {\n        user_id: Number(userId),\n        specialization: formData.specialization.trim(),\n        name: formData.name || undefined,\n        email: formData.email || undefined,\n        phone: formData.phone || \"\",\n        bmdc_no: formData.bmdc_no || \"\"\n      };\n      const res = await fetch(\"http://localhost:8000/api/doctors/register/\", {\n        method: \"POST\",\n        headers: authHeader,\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) {\n        const data = await res.json().catch(() => null);\n        throw new Error((data === null || data === void 0 ? void 0 : data.error) || \"Doctor registration failed\");\n      }\n      setSuccess(\"Doctor added successfully!\");\n      setFormData({\n        specialization: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        bmdc_no: \"\"\n      });\n      setUserId(\"\");\n      fetchDoctors();\n    } catch (err) {\n      setSubmitError(errText(err));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Inline edit (admin only)\n  const handleUpdateDoctor = async (id, field, value) => {\n    if (role !== \"admin\") return;\n    try {\n      const res = await fetch(`http://localhost:8000/api/doctors/${id}/update/`, {\n        method: \"PATCH\",\n        headers: authHeader,\n        body: JSON.stringify({\n          [field]: value\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to update doctor\");\n      setDoctors(prev => prev.map(d => d.id === id ? {\n        ...d,\n        [field]: value\n      } : d));\n    } catch (err) {\n      alert(errText(err));\n    }\n  };\n\n  // Approve/Reject (admin only)\n  const handleApproveReject = async (id, approve = true) => {\n    if (role !== \"admin\") return;\n    try {\n      const res = await fetch(`http://localhost:8000/api/doctors/${id}/approve/`, {\n        method: \"POST\",\n        headers: authHeader,\n        body: JSON.stringify({\n          approve\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to update status\");\n      setDoctors(prev => prev.map(d => d.id === id ? {\n        ...d,\n        is_verified: approve\n      } : d));\n    } catch (err) {\n      alert(errText(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), doctorsError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4 break-words\",\n      children: doctorsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 24\n    }, this), (role === \"admin\" || role === \"management\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-6 bg-white rounded shadow-md max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), submitError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-2\",\n        children: submitError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mb-2\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-1\",\n          children: \"Search users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username/email/id\",\n          value: q,\n          onChange: e => setQ(e.target.value),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          className: \"border p-2 w-full rounded\",\n          disabled: loadingUsers,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: loadingUsers ? \"Loading users...\" : \"Select a user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), filteredUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            disabled: doctorUserIds.includes(u.id),\n            children: [u.username || u.email || `user#${u.id}`, doctorUserIds.includes(u.id) ? \" (Already a doctor)\" : \"\"]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Specialization\",\n          value: formData.specialization,\n          onChange: e => setFormData({\n            ...formData,\n            specialization: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Doctor Name (optional)\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"BMDC Number\",\n          value: formData.bmdc_no,\n          onChange: e => setFormData({\n            ...formData,\n            bmdc_no: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email (optional)\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone (optional)\",\n          value: formData.phone,\n          onChange: e => setFormData({\n            ...formData,\n            phone: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !userId || !formData.specialization.trim() || !formData.bmdc_no.trim() || submitting,\n          className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-60\",\n          children: submitting ? \"Adding...\" : \"Add Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto bg-white rounded shadow-md p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Doctors List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), loadingDoctors ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-32\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this) : displayedDoctors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No doctors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white rounded-lg shadow-md border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-blue-600 text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"BMDC No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), (role === \"admin\" || role === \"management\") && /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedDoctors.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b hover:bg-blue-50 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: role === \"admin\" || role === \"management\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: doc.name || \"\",\n                onChange: e => handleUpdateDoctor(doc.id, \"name\", e.target.value),\n                className: \"border p-1 w-full rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this) : doc.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: role === \"admin\" || role === \"management\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: doc.specialization || \"\",\n                onChange: e => handleUpdateDoctor(doc.id, \"specialization\", e.target.value),\n                className: \"border p-1 w-full rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this) : doc.specialization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: role === \"admin\" || role === \"management\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: doc.bmdc_no || \"\",\n                onChange: e => handleUpdateDoctor(doc.id, \"bmdc_no\", e.target.value),\n                className: \"border p-1 w-full rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 23\n              }, this) : doc.bmdc_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: role === \"admin\" || role === \"management\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: doc.email || \"\",\n                onChange: e => handleUpdateDoctor(doc.id, \"email\", e.target.value),\n                className: \"border p-1 w-full rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this) : doc.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: role === \"admin\" || role === \"management\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: doc.phone || \"\",\n                onChange: e => handleUpdateDoctor(doc.id, \"phone\", e.target.value),\n                className: \"border p-1 w-full rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this) : doc.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.is_verified ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-600 font-medium\",\n                children: \"Approved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-yellow-600 font-medium\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), (role === \"admin\" || role === \"management\") && /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3 space-x-2\",\n              children: !doc.is_verified ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleApproveReject(doc.id, true),\n                className: \"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\",\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleApproveReject(doc.id, false),\n                className: \"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 21\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorsPage, \"wtfmkWcgAVUfxPXmKk0VIp3JVHM=\");\n_c = DoctorsPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorsPage\");","map":{"version":3,"names":["useEffect","useMemo","useState","jsxDEV","_jsxDEV","errText","err","message","DoctorsPage","username","role","_s","doctors","setDoctors","loadingDoctors","setLoadingDoctors","doctorsError","setDoctorsError","users","setUsers","loadingUsers","setLoadingUsers","usersError","setUsersError","q","setQ","userId","setUserId","formData","setFormData","specialization","name","email","phone","bmdc_no","submitError","setSubmitError","success","setSuccess","submitting","setSubmitting","token","localStorage","getItem","authHeader","Authorization","fetchDoctors","res","fetch","headers","ok","errorData","json","catch","Error","detail","status","data","doctorUserIds","map","doc","user","cancelled","loadUsers","url","all","push","Array","isArray","results","next","filteredUsers","search","toLowerCase","filter","u","includes","String","id","displayedDoctors","d","is_verified","handleSubmit","e","preventDefault","trim","Number","payload","user_id","undefined","method","body","JSON","stringify","error","handleUpdateDoctor","field","value","prev","alert","handleApproveReject","approve","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","onSubmit","disabled","length","onClick","_c","$RefreshReg$"],"sources":["E:/doctoraps/frontend/src/pages/Doctors.jsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\n\r\nfunction errText(err) {\r\n  try {\r\n    if (!err?.message) return \"Network error\";\r\n    return err.message;\r\n  } catch {\r\n    return \"Request failed.\";\r\n  }\r\n}\r\n\r\nexport default function DoctorsPage({ username, role }) {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\r\n  const [doctorsError, setDoctorsError] = useState(null);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loadingUsers, setLoadingUsers] = useState(false);\r\n  const [usersError, setUsersError] = useState(null);\r\n\r\n  const [q, setQ] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    specialization: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    bmdc_no: \"\",\r\n  });\r\n\r\n  const [submitError, setSubmitError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const token = localStorage.getItem(\"access\");\r\n  const authHeader = token\r\n    ? { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" }\r\n    : { \"Content-Type\": \"application/json\" };\r\n\r\n  // Fetch all doctors (works for public and admin)\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      setLoadingDoctors(true);\r\n      setDoctorsError(null);\r\n\r\n      const res = await fetch(\"http://localhost:8000/api/doctors/\", {\r\n        headers: authHeader,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json().catch(() => null);\r\n        throw new Error(errorData?.detail || `Failed to fetch doctors: ${res.status}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      setDoctors(data);\r\n    } catch (err) {\r\n      setDoctorsError(errText(err));\r\n    } finally {\r\n      setLoadingDoctors(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDoctors();\r\n  }, [token]);\r\n\r\n  const doctorUserIds = useMemo(() => doctors.map((doc) => doc.user), [doctors]);\r\n\r\n  // Fetch all users (admin only)\r\n  useEffect(() => {\r\n    if (role !== \"admin\" || !token) return;\r\n    let cancelled = false;\r\n\r\n    const loadUsers = async (url = \"http://localhost:8000/api/users/\") => {\r\n      setLoadingUsers(true);\r\n      try {\r\n        const all = [];\r\n        while (url) {\r\n          const res = await fetch(url, { headers: authHeader });\r\n          if (!res.ok) throw new Error(\"Failed to fetch users\");\r\n          const data = await res.json();\r\n          all.push(...(Array.isArray(data) ? data : data.results || []));\r\n          url = data?.next || null;\r\n        }\r\n        if (!cancelled) setUsers(all);\r\n      } catch (err) {\r\n        if (!cancelled) setUsersError(errText(err));\r\n      } finally {\r\n        if (!cancelled) setLoadingUsers(false);\r\n      }\r\n    };\r\n\r\n    loadUsers();\r\n    return () => (cancelled = true);\r\n  }, [role, token]);\r\n\r\n  const filteredUsers = useMemo(() => {\r\n    if (!q) return users;\r\n    const search = q.toLowerCase();\r\n    return users.filter(\r\n      (u) =>\r\n        (u.username && u.username.toLowerCase().includes(search)) ||\r\n        (u.email && u.email.toLowerCase().includes(search)) ||\r\n        String(u.id).includes(search)\r\n    );\r\n  }, [q, users]);\r\n\r\n  // Admin sees all, others see only verified\r\n  const displayedDoctors = useMemo(() => {\r\n    if (role === \"admin\" || role === \"management\") return doctors;\r\n    return doctors.filter((d) => d.is_verified);\r\n  }, [doctors, role]);\r\n\r\n  // Add doctor (admin only)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitError(null);\r\n    setSuccess(null);\r\n\r\n    if (!userId || !formData.specialization.trim() || !formData.bmdc_no.trim()) {\r\n      setSubmitError(\"User ID, Specialization এবং BMDC Number প্রয়োজন।\");\r\n      return;\r\n    }\r\n\r\n    if (doctorUserIds.includes(Number(userId))) {\r\n      setSubmitError(\"This user is already registered as a doctor.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n\r\n      const payload = {\r\n        user_id: Number(userId),\r\n        specialization: formData.specialization.trim(),\r\n        name: formData.name || undefined,\r\n        email: formData.email || undefined,\r\n        phone: formData.phone || \"\",\r\n        bmdc_no: formData.bmdc_no || \"\",\r\n      };\r\n\r\n      const res = await fetch(\"http://localhost:8000/api/doctors/register/\", {\r\n        method: \"POST\",\r\n        headers: authHeader,\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const data = await res.json().catch(() => null);\r\n        throw new Error(data?.error || \"Doctor registration failed\");\r\n      }\r\n\r\n      setSuccess(\"Doctor added successfully!\");\r\n      setFormData({ specialization: \"\", name: \"\", email: \"\", phone: \"\", bmdc_no: \"\" });\r\n      setUserId(\"\");\r\n      fetchDoctors();\r\n    } catch (err) {\r\n      setSubmitError(errText(err));\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Inline edit (admin only)\r\n  const handleUpdateDoctor = async (id, field, value) => {\r\n    if (role !== \"admin\") return;\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/doctors/${id}/update/`, {\r\n        method: \"PATCH\",\r\n        headers: authHeader,\r\n        body: JSON.stringify({ [field]: value }),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update doctor\");\r\n      setDoctors((prev) => prev.map((d) => (d.id === id ? { ...d, [field]: value } : d)));\r\n    } catch (err) {\r\n      alert(errText(err));\r\n    }\r\n  };\r\n\r\n  // Approve/Reject (admin only)\r\n  const handleApproveReject = async (id, approve = true) => {\r\n    if (role !== \"admin\") return;\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/doctors/${id}/approve/`, {\r\n        method: \"POST\",\r\n        headers: authHeader,\r\n        body: JSON.stringify({ approve }),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update status\");\r\n      setDoctors((prev) =>\r\n        prev.map((d) => (d.id === id ? { ...d, is_verified: approve } : d))\r\n      );\r\n    } catch (err) {\r\n      alert(errText(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Doctors</h1>\r\n\r\n      {/* Show error if fetching doctors fails */}\r\n      {doctorsError && <p className=\"text-red-500 mb-4 break-words\">{doctorsError}</p>}\r\n\r\n      {/* Admin-only Add Doctor Form */}\r\n      {(role === \"admin\" || role === \"management\") && (\r\n        <div className=\"mb-6 p-6 bg-white rounded shadow-md max-w-md\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Add Doctor</h2>\r\n          {submitError && <p className=\"text-red-500 mb-2\">{submitError}</p>}\r\n          {success && <p className=\"text-green-500 mb-2\">{success}</p>}\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"block font-medium mb-1\">Search users</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"username/email/id\"\r\n              value={q}\r\n              onChange={(e) => setQ(e.target.value)}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <select\r\n              value={userId}\r\n              onChange={(e) => setUserId(e.target.value)}\r\n              className=\"border p-2 w-full rounded\"\r\n              disabled={loadingUsers}\r\n            >\r\n              <option value=\"\">\r\n                {loadingUsers ? \"Loading users...\" : \"Select a user\"}\r\n              </option>\r\n              {filteredUsers.map((u) => (\r\n                <option key={u.id} value={u.id} disabled={doctorUserIds.includes(u.id)}>\r\n                  {u.username || u.email || `user#${u.id}`}\r\n                  {doctorUserIds.includes(u.id) ? \" (Already a doctor)\" : \"\"}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Specialization\"\r\n              value={formData.specialization}\r\n              onChange={(e) => setFormData({ ...formData, specialization: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Doctor Name (optional)\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"BMDC Number\"\r\n              value={formData.bmdc_no}\r\n              onChange={(e) => setFormData({ ...formData, bmdc_no: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email (optional)\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone (optional)\"\r\n              value={formData.phone}\r\n              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!userId || !formData.specialization.trim() || !formData.bmdc_no.trim() || submitting}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-60\"\r\n            >\r\n              {submitting ? \"Adding...\" : \"Add Doctor\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Doctors Table */}\r\n      <div className=\"overflow-x-auto bg-white rounded shadow-md p-4\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Doctors List</h2>\r\n        {loadingDoctors ? (\r\n          <div className=\"flex justify-center items-center h-32\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n          </div>\r\n        ) : displayedDoctors.length === 0 ? (\r\n          <p className=\"text-gray-500\">No doctors found.</p>\r\n        ) : (\r\n          <table className=\"min-w-full bg-white rounded-lg shadow-md border border-gray-200\">\r\n            <thead className=\"bg-blue-600 text-white\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left\">ID</th>\r\n                <th className=\"px-6 py-3 text-left\">Name</th>\r\n                <th className=\"px-6 py-3 text-left\">Specialization</th>\r\n                <th className=\"px-6 py-3 text-left\">BMDC No</th>\r\n                <th className=\"px-6 py-3 text-left\">Email</th>\r\n                <th className=\"px-6 py-3 text-left\">Phone</th>\r\n                <th className=\"px-6 py-3 text-left\">Status</th>\r\n                {(role === \"admin\" || role === \"management\") && (\r\n                  <th className=\"px-6 py-3 text-left\">Actions</th>\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedDoctors.map((doc) => (\r\n                <tr key={doc.id} className=\"border-b hover:bg-blue-50 transition-colors\">\r\n                  <td className=\"px-6 py-3\">{doc.id}</td>\r\n                  <td className=\"px-6 py-3\">\r\n                    {(role === \"admin\" || role === \"management\") ? (\r\n                      <input\r\n                        value={doc.name || \"\"}\r\n                        onChange={(e) => handleUpdateDoctor(doc.id, \"name\", e.target.value)}\r\n                        className=\"border p-1 w-full rounded\"\r\n                      />\r\n                    ) : (\r\n                      doc.name\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-3\">\r\n                    {(role === \"admin\" || role === \"management\") ? (\r\n                      <input\r\n                        value={doc.specialization || \"\"}\r\n                        onChange={(e) => handleUpdateDoctor(doc.id, \"specialization\", e.target.value)}\r\n                        className=\"border p-1 w-full rounded\"\r\n                      />\r\n                    ) : (\r\n                      doc.specialization\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-3\">\r\n                    {(role === \"admin\" || role === \"management\") ? (\r\n                      <input\r\n                        value={doc.bmdc_no || \"\"}\r\n                        onChange={(e) => handleUpdateDoctor(doc.id, \"bmdc_no\", e.target.value)}\r\n                        className=\"border p-1 w-full rounded\"\r\n                      />\r\n                    ) : (\r\n                      doc.bmdc_no\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-3\">\r\n                    {(role === \"admin\" || role === \"management\") ? (\r\n                      <input\r\n                        value={doc.email || \"\"}\r\n                        onChange={(e) => handleUpdateDoctor(doc.id, \"email\", e.target.value)}\r\n                        className=\"border p-1 w-full rounded\"\r\n                      />\r\n                    ) : (\r\n                      doc.email\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-3\">\r\n                    {(role === \"admin\" || role === \"management\") ? (\r\n                      <input\r\n                        value={doc.phone || \"\"}\r\n                        onChange={(e) => handleUpdateDoctor(doc.id, \"phone\", e.target.value)}\r\n                        className=\"border p-1 w-full rounded\"\r\n                      />\r\n                    ) : (\r\n                      doc.phone\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-3\">\r\n                    {doc.is_verified ? (\r\n                      <span className=\"text-green-600 font-medium\">Approved</span>\r\n                    ) : (\r\n                      <span className=\"text-yellow-600 font-medium\">Pending</span>\r\n                    )}\r\n                  </td>\r\n                  {(role === \"admin\" || role === \"management\") && (\r\n                    <td className=\"px-6 py-3 space-x-2\">\r\n                      {!doc.is_verified ? (\r\n                        <button\r\n                          onClick={() => handleApproveReject(doc.id, true)}\r\n                          className=\"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\"\r\n                        >\r\n                          Approve\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleApproveReject(doc.id, false)}\r\n                          className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n                        >\r\n                          Reject\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}