{"ast":null,"code":"var _jsxFileName = \"E:\\\\doctoraps\\\\frontend\\\\src\\\\pages\\\\Doctors.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\n\n// Error handling helpers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction pickMsgFromData(data) {\n  if (!data) return null;\n  if (typeof data === \"string\") {\n    if (data.includes(\"<!DOCTYPE html\") || data.includes(\"<html\")) return null;\n    return data;\n  }\n  if (data.detail) return data.detail;\n  if (data.error) return data.error;\n  const keys = Object.keys(data);\n  if (keys.length) {\n    const k = keys[0];\n    const v = Array.isArray(data[k]) ? data[k].join(\", \") : String(data[k]);\n    return `${k}: ${v}`;\n  }\n  return null;\n}\nfunction errText(err) {\n  try {\n    if (!(err !== null && err !== void 0 && err.message)) return \"Network error\";\n    return err.message;\n  } catch {\n    return \"Request failed.\";\n  }\n}\nexport default function DoctorsPage() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\n  const [doctorsError, setDoctorsError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [usersError, setUsersError] = useState(null);\n  const [q, setQ] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [formData, setFormData] = useState({\n    specialization: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const [submitError, setSubmitError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const extractList = data => Array.isArray(data) ? data : (data === null || data === void 0 ? void 0 : data.results) || [];\n  const token = localStorage.getItem(\"access\");\n  const authHeader = {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  };\n\n  // Fetch users\n  useEffect(() => {\n    let cancelled = false;\n    async function loadUsers(url = \"http://localhost:8000/api/users/\") {\n      setLoadingUsers(true);\n      try {\n        const all = [];\n        while (url) {\n          const res = await fetch(url, {\n            headers: authHeader\n          });\n          if (!res.ok) throw new Error(`Failed to fetch users`);\n          const data = await res.json();\n          all.push(...extractList(data));\n          url = (data === null || data === void 0 ? void 0 : data.next) || null;\n        }\n        if (!cancelled) setUsers(all);\n      } catch (err) {\n        if (!cancelled) setUsersError(errText(err));\n      } finally {\n        if (!cancelled) setLoadingUsers(false);\n      }\n    }\n    loadUsers();\n    return () => cancelled = true;\n  }, []);\n\n  // Fetch doctors\n  const fetchDoctors = async () => {\n    try {\n      setLoadingDoctors(true);\n      setDoctorsError(null);\n      const res = await fetch(\"http://localhost:8000/api/doctors/\", {\n        headers: authHeader\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch doctors\");\n      const data = await res.json();\n      setDoctors(extractList(data));\n    } catch (err) {\n      setDoctorsError(errText(err));\n    } finally {\n      setLoadingDoctors(false);\n    }\n  };\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n  const doctorUserIds = useMemo(() => doctors.map(doc => doc.user), [doctors]);\n  const filteredUsers = useMemo(() => {\n    if (!q) return users;\n    const s = q.toLowerCase();\n    return users.filter(u => u.username && u.username.toLowerCase().includes(s) || u.email && u.email.toLowerCase().includes(s) || String(u.id).includes(s));\n  }, [q, users]);\n  const handleChange = e => setFormData(prev => ({\n    ...prev,\n    [e.target.name]: e.target.value\n  }));\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError(null);\n    setSuccess(null);\n    if (!userId || !formData.specialization.trim()) {\n      setSubmitError(\"User ID এবং Specialization প্রয়োজন।\");\n      return;\n    }\n    if (doctorUserIds.includes(Number(userId))) {\n      setSubmitError(\"This user is already registered as a doctor.\");\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const payload = {\n        user_id: Number(userId),\n        specialization: formData.specialization.trim(),\n        name: formData.name || undefined,\n        email: formData.email || undefined,\n        phone: formData.phone || \"\"\n      };\n      const res = await fetch(\"http://localhost:8000/api/doctors/register/\", {\n        method: \"POST\",\n        headers: authHeader,\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) {\n        const data = await res.json().catch(() => null);\n        throw new Error((data === null || data === void 0 ? void 0 : data.error) || \"Doctor registration failed\");\n      }\n      setSuccess(\"Doctor added successfully!\");\n      setFormData({\n        specialization: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\"\n      });\n      setUserId(\"\");\n      fetchDoctors();\n    } catch (err) {\n      setSubmitError(errText(err));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Doctors Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-6 bg-white rounded shadow-md max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), submitError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-2 break-words\",\n        children: submitError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mb-2\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-1\",\n          children: \"Search users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username/email/id\",\n          value: q,\n          onChange: e => setQ(e.target.value),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block font-medium mb-1\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), !usersError ? /*#__PURE__*/_jsxDEV(\"select\", {\n            value: userId,\n            onChange: e => setUserId(e.target.value),\n            className: \"border p-2 w-full rounded\",\n            disabled: loadingUsers,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: loadingUsers ? \"Loading users...\" : \"Select a user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), filteredUsers.map(u => {\n              const isAlreadyDoctor = doctorUserIds.includes(u.id);\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: u.id,\n                disabled: isAlreadyDoctor,\n                children: [u.username || u.email || \"user\", \" #\", u.id, isAlreadyDoctor ? \" (Already a doctor)\" : \"\"]\n              }, u.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter user_id manually\",\n            value: userId,\n            onChange: e => setUserId(e.target.value),\n            className: \"border p-2 w-full rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), userId && doctorUserIds.includes(Number(userId)) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 mt-1\",\n            children: \"This user is already registered as a doctor.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"specialization\",\n          placeholder: \"Specialization\",\n          value: formData.specialization,\n          onChange: handleChange,\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Doctor Name (optional)\",\n          value: formData.name,\n          onChange: handleChange,\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email (optional)\",\n          value: formData.email,\n          onChange: handleChange,\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          placeholder: \"Phone (optional)\",\n          value: formData.phone,\n          onChange: handleChange,\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !userId || !formData.specialization.trim() || submitting || doctorUserIds.includes(Number(userId)),\n          className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-60\",\n          children: submitting ? \"Adding...\" : \"Add Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto bg-white rounded shadow-md p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Doctors List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), loadingDoctors ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-32\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this) : doctorsError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 break-words\",\n        children: doctorsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this) : doctors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No doctors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white rounded-lg shadow-md border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-blue-600 text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left font-medium\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left font-medium\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left font-medium\",\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left font-medium\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left font-medium\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: doctors.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b hover:bg-blue-50 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.specialization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-3\",\n              children: doc.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorsPage, \"pY/HY3MxvlnQAcP8BpizMMJpnWo=\");\n_c = DoctorsPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorsPage\");","map":{"version":3,"names":["useEffect","useMemo","useState","jsxDEV","_jsxDEV","pickMsgFromData","data","includes","detail","error","keys","Object","length","k","v","Array","isArray","join","String","errText","err","message","DoctorsPage","_s","doctors","setDoctors","loadingDoctors","setLoadingDoctors","doctorsError","setDoctorsError","users","setUsers","loadingUsers","setLoadingUsers","usersError","setUsersError","q","setQ","userId","setUserId","formData","setFormData","specialization","name","email","phone","submitError","setSubmitError","success","setSuccess","submitting","setSubmitting","extractList","results","token","localStorage","getItem","authHeader","Authorization","cancelled","loadUsers","url","all","res","fetch","headers","ok","Error","json","push","next","fetchDoctors","doctorUserIds","map","doc","user","filteredUsers","s","toLowerCase","filter","u","username","id","handleChange","e","prev","target","value","handleSubmit","preventDefault","trim","Number","payload","user_id","undefined","method","body","JSON","stringify","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onSubmit","disabled","isAlreadyDoctor","_c","$RefreshReg$"],"sources":["E:/doctoraps/frontend/src/pages/Doctors.jsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\n\r\n// Error handling helpers\r\nfunction pickMsgFromData(data) {\r\n  if (!data) return null;\r\n  if (typeof data === \"string\") {\r\n    if (data.includes(\"<!DOCTYPE html\") || data.includes(\"<html\")) return null;\r\n    return data;\r\n  }\r\n  if (data.detail) return data.detail;\r\n  if (data.error) return data.error;\r\n  const keys = Object.keys(data);\r\n  if (keys.length) {\r\n    const k = keys[0];\r\n    const v = Array.isArray(data[k]) ? data[k].join(\", \") : String(data[k]);\r\n    return `${k}: ${v}`;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction errText(err) {\r\n  try {\r\n    if (!err?.message) return \"Network error\";\r\n    return err.message;\r\n  } catch {\r\n    return \"Request failed.\";\r\n  }\r\n}\r\n\r\nexport default function DoctorsPage() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\r\n  const [doctorsError, setDoctorsError] = useState(null);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loadingUsers, setLoadingUsers] = useState(false);\r\n  const [usersError, setUsersError] = useState(null);\r\n\r\n  const [q, setQ] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    specialization: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const [submitError, setSubmitError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const extractList = (data) => (Array.isArray(data) ? data : data?.results || []);\r\n\r\n  const token = localStorage.getItem(\"access\");\r\n  const authHeader = { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" };\r\n\r\n  // Fetch users\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    async function loadUsers(url = \"http://localhost:8000/api/users/\") {\r\n      setLoadingUsers(true);\r\n      try {\r\n        const all = [];\r\n        while (url) {\r\n          const res = await fetch(url, { headers: authHeader });\r\n          if (!res.ok) throw new Error(`Failed to fetch users`);\r\n          const data = await res.json();\r\n          all.push(...extractList(data));\r\n          url = data?.next || null;\r\n        }\r\n        if (!cancelled) setUsers(all);\r\n      } catch (err) {\r\n        if (!cancelled) setUsersError(errText(err));\r\n      } finally {\r\n        if (!cancelled) setLoadingUsers(false);\r\n      }\r\n    }\r\n    loadUsers();\r\n    return () => (cancelled = true);\r\n  }, []);\r\n\r\n  // Fetch doctors\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      setLoadingDoctors(true);\r\n      setDoctorsError(null);\r\n      const res = await fetch(\"http://localhost:8000/api/doctors/\", { headers: authHeader });\r\n      if (!res.ok) throw new Error(\"Failed to fetch doctors\");\r\n      const data = await res.json();\r\n      setDoctors(extractList(data));\r\n    } catch (err) {\r\n      setDoctorsError(errText(err));\r\n    } finally {\r\n      setLoadingDoctors(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const doctorUserIds = useMemo(() => doctors.map((doc) => doc.user), [doctors]);\r\n\r\n  const filteredUsers = useMemo(() => {\r\n    if (!q) return users;\r\n    const s = q.toLowerCase();\r\n    return users.filter(\r\n      (u) =>\r\n        (u.username && u.username.toLowerCase().includes(s)) ||\r\n        (u.email && u.email.toLowerCase().includes(s)) ||\r\n        String(u.id).includes(s)\r\n    );\r\n  }, [q, users]);\r\n\r\n  const handleChange = (e) =>\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitError(null);\r\n    setSuccess(null);\r\n\r\n    if (!userId || !formData.specialization.trim()) {\r\n      setSubmitError(\"User ID এবং Specialization প্রয়োজন।\");\r\n      return;\r\n    }\r\n\r\n    if (doctorUserIds.includes(Number(userId))) {\r\n      setSubmitError(\"This user is already registered as a doctor.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n\r\n      const payload = {\r\n        user_id: Number(userId),\r\n        specialization: formData.specialization.trim(),\r\n        name: formData.name || undefined,\r\n        email: formData.email || undefined,\r\n        phone: formData.phone || \"\",\r\n      };\r\n\r\n      const res = await fetch(\"http://localhost:8000/api/doctors/register/\", {\r\n        method: \"POST\",\r\n        headers: authHeader,\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const data = await res.json().catch(() => null);\r\n        throw new Error(data?.error || \"Doctor registration failed\");\r\n      }\r\n\r\n      setSuccess(\"Doctor added successfully!\");\r\n      setFormData({ specialization: \"\", name: \"\", email: \"\", phone: \"\" });\r\n      setUserId(\"\");\r\n      fetchDoctors();\r\n    } catch (err) {\r\n      setSubmitError(errText(err));\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Doctors Management</h1>\r\n\r\n      {/* Add Doctor Form */}\r\n      <div className=\"mb-6 p-6 bg-white rounded shadow-md max-w-md\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Add Doctor</h2>\r\n\r\n        {submitError && <p className=\"text-red-500 mb-2 break-words\">{submitError}</p>}\r\n        {success && <p className=\"text-green-500 mb-2\">{success}</p>}\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"block font-medium mb-1\">Search users</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username/email/id\"\r\n            value={q}\r\n            onChange={(e) => setQ(e.target.value)}\r\n            className=\"border p-2 w-full rounded\"\r\n          />\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block font-medium mb-1\">User</label>\r\n            {!usersError ? (\r\n              <select\r\n                value={userId}\r\n                onChange={(e) => setUserId(e.target.value)}\r\n                className=\"border p-2 w-full rounded\"\r\n                disabled={loadingUsers}\r\n              >\r\n                <option value=\"\">\r\n                  {loadingUsers ? \"Loading users...\" : \"Select a user\"}\r\n                </option>\r\n                {filteredUsers.map((u) => {\r\n                  const isAlreadyDoctor = doctorUserIds.includes(u.id);\r\n                  return (\r\n                    <option key={u.id} value={u.id} disabled={isAlreadyDoctor}>\r\n                      {(u.username || u.email || \"user\")} #{u.id}\r\n                      {isAlreadyDoctor ? \" (Already a doctor)\" : \"\"}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Enter user_id manually\"\r\n                value={userId}\r\n                onChange={(e) => setUserId(e.target.value)}\r\n                className=\"border p-2 w-full rounded\"\r\n              />\r\n            )}\r\n            {userId && doctorUserIds.includes(Number(userId)) && (\r\n              <p className=\"text-red-500 mt-1\">This user is already registered as a doctor.</p>\r\n            )}\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"specialization\"\r\n            placeholder=\"Specialization\"\r\n            value={formData.specialization}\r\n            onChange={handleChange}\r\n            className=\"border p-2 w-full rounded\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Doctor Name (optional)\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className=\"border p-2 w-full rounded\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email (optional)\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"border p-2 w-full rounded\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"Phone (optional)\"\r\n            value={formData.phone}\r\n            onChange={handleChange}\r\n            className=\"border p-2 w-full rounded\"\r\n          />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={\r\n              !userId ||\r\n              !formData.specialization.trim() ||\r\n              submitting ||\r\n              doctorUserIds.includes(Number(userId))\r\n            }\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-60\"\r\n          >\r\n            {submitting ? \"Adding...\" : \"Add Doctor\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Doctors Table */}\r\n      <div className=\"overflow-x-auto bg-white rounded shadow-md p-4\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Doctors List</h2>\r\n        {loadingDoctors ? (\r\n          <div className=\"flex justify-center items-center h-32\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n          </div>\r\n        ) : doctorsError ? (\r\n          <p className=\"text-red-500 break-words\">{doctorsError}</p>\r\n        ) : doctors.length === 0 ? (\r\n          <p className=\"text-gray-500\">No doctors found.</p>\r\n        ) : (\r\n          <table className=\"min-w-full bg-white rounded-lg shadow-md border border-gray-200\">\r\n            <thead className=\"bg-blue-600 text-white\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left font-medium\">ID</th>\r\n                <th className=\"px-6 py-3 text-left font-medium\">Name</th>\r\n                <th className=\"px-6 py-3 text-left font-medium\">Specialization</th>\r\n                <th className=\"px-6 py-3 text-left font-medium\">Email</th>\r\n                <th className=\"px-6 py-3 text-left font-medium\">Phone</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {doctors.map((doc) => (\r\n                <tr key={doc.id} className=\"border-b hover:bg-blue-50 transition-colors\">\r\n                  <td className=\"px-6 py-3\">{doc.id}</td>\r\n                  <td className=\"px-6 py-3\">{doc.name}</td>\r\n                  <td className=\"px-6 py-3\">{doc.specialization}</td>\r\n                  <td className=\"px-6 py-3\">{doc.email}</td>\r\n                  <td className=\"px-6 py-3\">{doc.phone}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}