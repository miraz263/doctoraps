{"ast":null,"code":"var _jsxFileName = \"E:\\\\doctoraps\\\\frontend\\\\src\\\\pages\\\\Doctors.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction errText(err) {\n  try {\n    if (!(err !== null && err !== void 0 && err.message)) return \"Network error\";\n    return err.message;\n  } catch {\n    return \"Request failed.\";\n  }\n}\nexport default function DoctorsPage() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\n  const [doctorsError, setDoctorsError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n  const [usersError, setUsersError] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [q, setQ] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [formData, setFormData] = useState({\n    specialization: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    bmdc_no: \"\"\n  });\n  const [submitError, setSubmitError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const token = localStorage.getItem(\"access\");\n  const authHeader = {\n    \"Authorization\": `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  };\n\n  // Fetch current user\n  useEffect(() => {\n    if (!token) return setLoadingUser(false);\n    const fetchCurrentUser = async () => {\n      try {\n        setLoadingUser(true);\n        const res = await fetch(\"http://127.0.0.1:8000/api/users/me/\", {\n          headers: authHeader\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch current user\");\n        const data = await res.json();\n        setCurrentUser(data);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoadingUser(false);\n      }\n    };\n    fetchCurrentUser();\n  }, [token]);\n\n  // Fetch all doctors\n  const fetchDoctors = async () => {\n    if (!token) return setDoctorsError(\"No access token found.\");\n    try {\n      setLoadingDoctors(true);\n      setDoctorsError(null);\n      const res = await fetch(\"http://127.0.0.1:8000/api/doctors/\", {\n        headers: authHeader\n      });\n      if (!res.ok) throw new Error(`Failed to fetch doctors: ${res.status}`);\n      const data = await res.json();\n      setDoctors(data);\n    } catch (err) {\n      setDoctorsError(errText(err));\n    } finally {\n      setLoadingDoctors(false);\n    }\n  };\n  useEffect(() => {\n    fetchDoctors();\n  }, [token]);\n  const doctorUserIds = useMemo(() => doctors.map(doc => doc.user), [doctors]);\n\n  // Fetch all users (admin only)\n  useEffect(() => {\n    if (!currentUser || currentUser.role !== \"admin\") return;\n    let cancelled = false;\n    const loadUsers = async (url = \"http://127.0.0.1:8000/api/users/\") => {\n      setLoadingUsers(true);\n      try {\n        const all = [];\n        while (url) {\n          const res = await fetch(url, {\n            headers: authHeader\n          });\n          if (!res.ok) throw new Error(\"Failed to fetch users\");\n          const data = await res.json();\n          all.push(...(Array.isArray(data) ? data : data.results || []));\n          url = (data === null || data === void 0 ? void 0 : data.next) || null;\n        }\n        if (!cancelled) setUsers(all);\n      } catch (err) {\n        if (!cancelled) setUsersError(errText(err));\n      } finally {\n        if (!cancelled) setLoadingUsers(false);\n      }\n    };\n    loadUsers();\n    return () => cancelled = true;\n  }, [currentUser]);\n  const filteredUsers = useMemo(() => {\n    if (!q) return users;\n    const search = q.toLowerCase();\n    return users.filter(u => u.username && u.username.toLowerCase().includes(search) || u.email && u.email.toLowerCase().includes(search) || String(u.id).includes(search));\n  }, [q, users]);\n  const displayedDoctors = useMemo(() => {\n    if (!currentUser) return [];\n    if (currentUser.role === \"admin\" || currentUser.role === \"management\") return doctors;\n    return doctors.filter(d => d.is_verified);\n  }, [doctors, currentUser]);\n\n  // Add doctor (admin only)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError(null);\n    setSuccess(null);\n    if (!userId || !formData.specialization.trim() || !formData.bmdc_no.trim()) {\n      setSubmitError(\"User ID, Specialization এবং BMDC Number প্রয়োজন।\");\n      return;\n    }\n    if (doctorUserIds.includes(Number(userId))) {\n      setSubmitError(\"This user is already registered as a doctor.\");\n      return;\n    }\n    try {\n      setSubmitting(true);\n      const payload = {\n        user_id: Number(userId),\n        specialization: formData.specialization.trim(),\n        name: formData.name || undefined,\n        email: formData.email || undefined,\n        phone: formData.phone || \"\",\n        bmdc_no: formData.bmdc_no || \"\"\n      };\n      const res = await fetch(\"http://127.0.0.1:8000/api/doctors/register/\", {\n        method: \"POST\",\n        headers: authHeader,\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) {\n        const data = await res.json().catch(() => null);\n        throw new Error((data === null || data === void 0 ? void 0 : data.error) || \"Doctor registration failed\");\n      }\n      setSuccess(\"Doctor added successfully!\");\n      setFormData({\n        specialization: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        bmdc_no: \"\"\n      });\n      setUserId(\"\");\n      fetchDoctors();\n    } catch (err) {\n      setSubmitError(errText(err));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loadingUser) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading user...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === \"admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-6 bg-white rounded shadow-md max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), submitError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-2\",\n        children: submitError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mb-2\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-1\",\n          children: \"Search users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username/email/id\",\n          value: q,\n          onChange: e => setQ(e.target.value),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          className: \"border p-2 w-full rounded\",\n          disabled: loadingUsers,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: loadingUsers ? \"Loading users...\" : \"Select a user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), filteredUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            disabled: doctorUserIds.includes(u.id),\n            children: [u.username || u.email || `user#${u.id}`, doctorUserIds.includes(u.id) ? \" (Already a doctor)\" : \"\"]\n          }, u.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Specialization\",\n          value: formData.specialization,\n          onChange: e => setFormData({\n            ...formData,\n            specialization: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Doctor Name (optional)\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"BMDC Number\",\n          value: formData.bmdc_no,\n          onChange: e => setFormData({\n            ...formData,\n            bmdc_no: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email (optional)\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone (optional)\",\n          value: formData.phone,\n          onChange: e => setFormData({\n            ...formData,\n            phone: e.target.value\n          }),\n          className: \"border p-2 w-full rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !userId || !formData.specialization.trim() || !formData.bmdc_no.trim() || submitting,\n          className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-60\",\n          children: submitting ? \"Adding...\" : \"Add Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Doctors List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), loadingDoctors && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading doctors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 28\n      }, this), doctorsError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: doctorsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 26\n      }, this), !loadingDoctors && !doctorsError && displayedDoctors.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No doctors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 79\n      }, this), !loadingDoctors && displayedDoctors.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-auto w-full border-collapse border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"BMDC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"Verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedDoctors.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-2 py-1\",\n              children: d.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-2 py-1\",\n              children: d.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-2 py-1\",\n              children: d.specialization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-2 py-1\",\n              children: d.bmdc_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-2 py-1\",\n              children: d.is_verified ? \"Yes\" : \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, d.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorsPage, \"aqsMfov5tQ436oL3N32EVJyfRc4=\");\n_c = DoctorsPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorsPage\");","map":{"version":3,"names":["useEffect","useMemo","useState","jsxDEV","_jsxDEV","errText","err","message","DoctorsPage","_s","doctors","setDoctors","loadingDoctors","setLoadingDoctors","doctorsError","setDoctorsError","users","setUsers","loadingUsers","setLoadingUsers","usersError","setUsersError","currentUser","setCurrentUser","loadingUser","setLoadingUser","q","setQ","userId","setUserId","formData","setFormData","specialization","name","email","phone","bmdc_no","submitError","setSubmitError","success","setSuccess","submitting","setSubmitting","token","localStorage","getItem","authHeader","fetchCurrentUser","res","fetch","headers","ok","Error","data","json","console","error","fetchDoctors","status","doctorUserIds","map","doc","user","role","cancelled","loadUsers","url","all","push","Array","isArray","results","next","filteredUsers","search","toLowerCase","filter","u","username","includes","String","id","displayedDoctors","d","is_verified","handleSubmit","e","preventDefault","trim","Number","payload","user_id","undefined","method","body","JSON","stringify","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","target","onSubmit","disabled","length","_c","$RefreshReg$"],"sources":["E:/doctoraps/frontend/src/pages/Doctors.jsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\n\r\nfunction errText(err) {\r\n  try {\r\n    if (!err?.message) return \"Network error\";\r\n    return err.message;\r\n  } catch {\r\n    return \"Request failed.\";\r\n  }\r\n}\r\n\r\nexport default function DoctorsPage() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\r\n  const [doctorsError, setDoctorsError] = useState(null);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [loadingUsers, setLoadingUsers] = useState(false);\r\n  const [usersError, setUsersError] = useState(null);\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n\r\n  const [q, setQ] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    specialization: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    bmdc_no: \"\",\r\n  });\r\n\r\n  const [submitError, setSubmitError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const token = localStorage.getItem(\"access\");\r\n  const authHeader = { \r\n    \"Authorization\": `Bearer ${token}`, \r\n    \"Content-Type\": \"application/json\" \r\n  };\r\n\r\n  // Fetch current user\r\n  useEffect(() => {\r\n    if (!token) return setLoadingUser(false);\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        setLoadingUser(true);\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/users/me/\", {\r\n          headers: authHeader,\r\n        });\r\n        if (!res.ok) throw new Error(\"Failed to fetch current user\");\r\n        const data = await res.json();\r\n        setCurrentUser(data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      } finally {\r\n        setLoadingUser(false);\r\n      }\r\n    };\r\n    fetchCurrentUser();\r\n  }, [token]);\r\n\r\n  // Fetch all doctors\r\n  const fetchDoctors = async () => {\r\n    if (!token) return setDoctorsError(\"No access token found.\");\r\n    try {\r\n      setLoadingDoctors(true);\r\n      setDoctorsError(null);\r\n      const res = await fetch(\"http://127.0.0.1:8000/api/doctors/\", { headers: authHeader });\r\n      if (!res.ok) throw new Error(`Failed to fetch doctors: ${res.status}`);\r\n      const data = await res.json();\r\n      setDoctors(data);\r\n    } catch (err) {\r\n      setDoctorsError(errText(err));\r\n    } finally {\r\n      setLoadingDoctors(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchDoctors(); }, [token]);\r\n\r\n  const doctorUserIds = useMemo(() => doctors.map((doc) => doc.user), [doctors]);\r\n\r\n  // Fetch all users (admin only)\r\n  useEffect(() => {\r\n    if (!currentUser || currentUser.role !== \"admin\") return;\r\n    let cancelled = false;\r\n\r\n    const loadUsers = async (url = \"http://127.0.0.1:8000/api/users/\") => {\r\n      setLoadingUsers(true);\r\n      try {\r\n        const all = [];\r\n        while (url) {\r\n          const res = await fetch(url, { headers: authHeader });\r\n          if (!res.ok) throw new Error(\"Failed to fetch users\");\r\n          const data = await res.json();\r\n          all.push(...(Array.isArray(data) ? data : data.results || []));\r\n          url = data?.next || null;\r\n        }\r\n        if (!cancelled) setUsers(all);\r\n      } catch (err) {\r\n        if (!cancelled) setUsersError(errText(err));\r\n      } finally {\r\n        if (!cancelled) setLoadingUsers(false);\r\n      }\r\n    };\r\n\r\n    loadUsers();\r\n    return () => (cancelled = true);\r\n  }, [currentUser]);\r\n\r\n  const filteredUsers = useMemo(() => {\r\n    if (!q) return users;\r\n    const search = q.toLowerCase();\r\n    return users.filter(\r\n      (u) =>\r\n        (u.username && u.username.toLowerCase().includes(search)) ||\r\n        (u.email && u.email.toLowerCase().includes(search)) ||\r\n        String(u.id).includes(search)\r\n    );\r\n  }, [q, users]);\r\n\r\n  const displayedDoctors = useMemo(() => {\r\n    if (!currentUser) return [];\r\n    if (currentUser.role === \"admin\" || currentUser.role === \"management\") return doctors;\r\n    return doctors.filter((d) => d.is_verified);\r\n  }, [doctors, currentUser]);\r\n\r\n  // Add doctor (admin only)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitError(null); setSuccess(null);\r\n\r\n    if (!userId || !formData.specialization.trim() || !formData.bmdc_no.trim()) {\r\n      setSubmitError(\"User ID, Specialization এবং BMDC Number প্রয়োজন।\");\r\n      return;\r\n    }\r\n    if (doctorUserIds.includes(Number(userId))) {\r\n      setSubmitError(\"This user is already registered as a doctor.\"); \r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const payload = {\r\n        user_id: Number(userId),\r\n        specialization: formData.specialization.trim(),\r\n        name: formData.name || undefined,\r\n        email: formData.email || undefined,\r\n        phone: formData.phone || \"\",\r\n        bmdc_no: formData.bmdc_no || \"\",\r\n      };\r\n\r\n      const res = await fetch(\"http://127.0.0.1:8000/api/doctors/register/\", {\r\n        method: \"POST\",\r\n        headers: authHeader,\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const data = await res.json().catch(() => null);\r\n        throw new Error(data?.error || \"Doctor registration failed\");\r\n      }\r\n\r\n      setSuccess(\"Doctor added successfully!\");\r\n      setFormData({ specialization: \"\", name: \"\", email: \"\", phone: \"\", bmdc_no: \"\" });\r\n      setUserId(\"\");\r\n      fetchDoctors();\r\n    } catch (err) { setSubmitError(errText(err)); }\r\n    finally { setSubmitting(false); }\r\n  };\r\n\r\n  if (loadingUser) return <p>Loading user...</p>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Doctors</h1>\r\n\r\n      {currentUser?.role === \"admin\" && (\r\n        <div className=\"mb-6 p-6 bg-white rounded shadow-md max-w-md\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Add Doctor</h2>\r\n          {submitError && <p className=\"text-red-500 mb-2\">{submitError}</p>}\r\n          {success && <p className=\"text-green-500 mb-2\">{success}</p>}\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"block font-medium mb-1\">Search users</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"username/email/id\"\r\n              value={q}\r\n              onChange={(e) => setQ(e.target.value)}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <select\r\n              value={userId}\r\n              onChange={(e) => setUserId(e.target.value)}\r\n              className=\"border p-2 w-full rounded\"\r\n              disabled={loadingUsers}\r\n            >\r\n              <option value=\"\">{loadingUsers ? \"Loading users...\" : \"Select a user\"}</option>\r\n              {filteredUsers.map((u) => (\r\n                <option key={u.id} value={u.id} disabled={doctorUserIds.includes(u.id)}>\r\n                  {u.username || u.email || `user#${u.id}`}\r\n                  {doctorUserIds.includes(u.id) ? \" (Already a doctor)\" : \"\"}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Specialization\"\r\n              value={formData.specialization}\r\n              onChange={(e) => setFormData({ ...formData, specialization: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Doctor Name (optional)\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"BMDC Number\"\r\n              value={formData.bmdc_no}\r\n              onChange={(e) => setFormData({ ...formData, bmdc_no: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email (optional)\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone (optional)\"\r\n              value={formData.phone}\r\n              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n              className=\"border p-2 w-full rounded\"\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!userId || !formData.specialization.trim() || !formData.bmdc_no.trim() || submitting}\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-60\"\r\n            >\r\n              {submitting ? \"Adding...\" : \"Add Doctor\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white rounded shadow p-4\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Doctors List</h2>\r\n        {loadingDoctors && <p>Loading doctors...</p>}\r\n        {doctorsError && <p className=\"text-red-500\">{doctorsError}</p>}\r\n        {!loadingDoctors && !doctorsError && displayedDoctors.length === 0 && <p>No doctors found.</p>}\r\n        {!loadingDoctors && displayedDoctors.length > 0 && (\r\n          <table className=\"table-auto w-full border-collapse border border-gray-200\">\r\n            <thead>\r\n              <tr className=\"bg-gray-100\">\r\n                <th className=\"border px-2 py-1\">ID</th>\r\n                <th className=\"border px-2 py-1\">Name</th>\r\n                <th className=\"border px-2 py-1\">Specialization</th>\r\n                <th className=\"border px-2 py-1\">BMDC</th>\r\n                <th className=\"border px-2 py-1\">Verified</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedDoctors.map((d) => (\r\n                <tr key={d.id}>\r\n                  <td className=\"border px-2 py-1\">{d.id}</td>\r\n                  <td className=\"border px-2 py-1\">{d.name}</td>\r\n                  <td className=\"border px-2 py-1\">{d.specialization}</td>\r\n                  <td className=\"border px-2 py-1\">{d.bmdc_no}</td>\r\n                  <td className=\"border px-2 py-1\">{d.is_verified ? \"Yes\" : \"No\"}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}