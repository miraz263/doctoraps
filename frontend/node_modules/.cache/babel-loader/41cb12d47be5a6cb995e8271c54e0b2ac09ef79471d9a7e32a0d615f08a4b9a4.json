{"ast":null,"code":"var _jsxFileName = \"E:\\\\doctoraps\\\\frontend\\\\src\\\\components\\\\UserContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\n\n// ১. Context তৈরি\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\n\n// ২. Context Provider\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // উদাহরণস্বরূপ, যদি JWT token থেকে username বের করতে চাও\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      // decode JWT token (simple base64 decode, অথবা jwt-decode library ব্যবহার করতে পারো)\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      setUser({\n        username: payload.username\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n// ৩. Custom hook ব্যবহার করে সহজে access\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nexport function useUser() {\n  _s2();\n  return useContext(UserContext);\n}\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","token","localStorage","getItem","payload","JSON","parse","atob","split","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["E:/doctoraps/frontend/src/components/UserContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// ১. Context তৈরি\r\nconst UserContext = createContext(null);\r\n\r\n// ২. Context Provider\r\nexport function UserProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // উদাহরণস্বরূপ, যদি JWT token থেকে username বের করতে চাও\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n    if (token) {\r\n      // decode JWT token (simple base64 decode, অথবা jwt-decode library ব্যবহার করতে পারো)\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      setUser({ username: payload.username });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\n// ৩. Custom hook ব্যবহার করে সহজে access\r\nexport function useUser() {\r\n  return useContext(UserContext);\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrDR,OAAO,CAAC;QAAES,QAAQ,EAAEL,OAAO,CAACK;MAAS,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC5CA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAAjB,EAAA,CApBgBF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqB5B,OAAO,SAASqB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAO5B,UAAU,CAACK,WAAW,CAAC;AAChC;AAACuB,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}